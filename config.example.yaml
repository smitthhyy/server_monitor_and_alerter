# =====================================================================
# Server Monitor and Alerter — Example Configuration (config.yaml)
# =====================================================================
# Notes:
# - Alerts are emailed using Amazon SES.
# - CPU and Network checks alert after 2 consecutive failures; others after 1.
# - Units are documented for each setting. Keep types as shown.
# - After editing config.yaml, restart the service if running under systemd.
# =====================================================================

# -----------------------------
# AWS (SES) email configuration
# -----------------------------
aws:
  # AWS region where SES is enabled (e.g., us-east-1, ap-southeast-2)
  region: ap-southeast-2

  # Verified SES sender address (must be verified in SES, or domain verified)
  ses_sender: no-reply@your-domain.example

  # One or more recipient email addresses
  ses_recipients:
    - admin1@your-domain.example
    - admin2@your-domain.example

# -------------------------------------------------
# Thresholds and checks (percentages and byte rates)
# -------------------------------------------------
thresholds:
  # Percent-based thresholds (0–100)
  disk_pct: 80         # Alert if used disk percent exceeds this value
  cpu_pct: 75          # Alert if average CPU percent exceeds this value
  mem_pct: 75          # Alert if used memory percent exceeds this value

  # Network threshold in bytes per second (aggregate)
  net_bytes: 10000000  # e.g., 10,000,000 B/s ≈ 10 MB/s

  # HTTP/HTTPS health URLs to check (200 status is considered healthy)
  server_check_urls:
    - https://site1.example.com/health
    - https://site2.example.com/health

  # Process checks: map "process_name" -> minimum expected instances
  # Use the executable/command name as it appears in `ps` output.
  processes:
    apache2: 2                      # expect at least 2 workers
    mysqld: 1
    mosquitto: 1

  # Client application checks:
  # - Use absolute path to the app's script (Node/Python/PHP etc.).
  # - A match occurs by process CWD or resolved script path.
  # - Value is the minimum number of running processes expected.
  client_apps:
    "/srv/client1/app.js": 1
    "/srv/client2/app.js": 1

  # Repeated alert control:
  # - After an initial alert, wait this many consecutive failing cycles
  #   before emailing again for the same alert.
  # - Total time between repeated emails = alert_repeat_cycles * interval_secs
  alert_repeat_cycles: 15

# ----------------------------------------------------
# Scheduler cadence (seconds between full check cycles)
# ----------------------------------------------------
interval_secs: 60

# ----------------------------------------------------
# Email subject customization
# ----------------------------------------------------
# Emails start with "[ALERT]" or "[RECOVERY]" and then this suffix.
subject_suffix: "[prod-web-1]"

# -----------------------------
# Logging configuration
# -----------------------------
logging:
  # Global log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
  root_level: INFO

  # Per-module overrides (logger name -> level)
  # Set to DEBUG for deeper diagnostics while testing.
  overrides:
    monitors.client_app: INFO
    monitors.cpu: INFO
    monitors.disk: INFO
    monitors.memory: INFO
    monitors.network: INFO
    monitors.process: INFO
    monitors.server: INFO

# =====================================================================
# Credentials note:
# - Provide AWS credentials via environment (AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY)
#   or ~/.aws/credentials under the appropriate profile.
# Security tips:
# - Use least-privilege IAM policies for SES.
# - Restrict permissions on config files containing sensitive values.
# =====================================================================
